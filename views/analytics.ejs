<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QuiziFY - Analytics</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      tailwind.config = {
        darkMode: 'class',
        theme: {
          extend: {
            fontFamily: {
              'inter': ['Inter', 'sans-serif'],
            },
            colors: {
              primary: {
                50: '#f0f9ff',
                500: '#0ea5e9',
                600: '#0284c7',
                700: '#0369a1',
              },
              secondary: {
                500: '#d946ef',
                600: '#c026d3',
              },
              dark: {
                50: '#f8fafc',
                300: '#cbd5e1',
                400: '#94a3b8',
                500: '#64748b',
                600: '#475569',
                700: '#334155',
                800: '#1e293b',
                900: '#0f172a',
              }
            },
            animation: {
              'fade-in': 'fadeIn 0.5s ease-out',
              'slide-up': 'slideUp 0.6s ease-out',
              'count-up': 'countUp 2s ease-out',
            },
            keyframes: {
              fadeIn: {
                '0%': { opacity: '0', transform: 'translateY(10px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' },
              },
              slideUp: {
                '0%': { opacity: '0', transform: 'translateY(30px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' },
              },
              countUp: {
                '0%': { transform: 'scale(0.5)', opacity: '0' },
                '50%': { transform: 'scale(1.1)' },
                '100%': { transform: 'scale(1)', opacity: '1' },
              }
            }
          }
        }
      }
    </script>
    <style>
      body {
        font-family: 'Inter', sans-serif;
      }
      .gradient-text {
        background: linear-gradient(135deg, #0ea5e9, #d946ef);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }
      .glass-effect {
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
      }
    </style>
</head>
<body class="bg-dark-900 text-white transition-colors duration-300">
    <!-- Theme Toggle Script -->
    <script>
      function initializeTheme() {
        const savedTheme = localStorage.getItem('theme');
        const theme = savedTheme || 'dark';
        
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
          document.body.classList.add('dark');
          document.body.className = 'bg-dark-900 text-white transition-colors duration-300';
        } else {
          document.documentElement.classList.remove('dark');
          document.body.classList.remove('dark');
          document.body.className = 'bg-gray-50 text-gray-900 transition-colors duration-300';
        }
        
        localStorage.setItem('theme', theme);
      }
      
      initializeTheme();
    </script>

    <!-- Navigation -->
    <nav class="fixed top-0 w-full z-50 glass-effect bg-dark-800/80 border-b border-dark-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center space-x-4">
            <a href="/admin-dashboard" class="flex items-center space-x-2 text-primary-400 hover:text-primary-300 transition-colors duration-200">
              <span class="material-symbols-outlined">arrow_back</span>
              <span class="hidden sm:inline">Dashboard</span>
            </a>
            <div class="flex items-center space-x-2">
              <div class="w-8 h-8 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-lg">quiz</span>
              </div>
              <h1 class="text-xl md:text-2xl font-bold gradient-text">QUIZIFY</h1>
            </div>
          </div>
          
          <form action="/logout" method="post">
            <button class="px-3 md:px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors duration-200 text-sm md:text-base">
              <span class="material-symbols-outlined md:mr-2">logout</span>
              <span class="hidden md:inline">Logout</span>
            </button>
          </form>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-20 pb-8 px-4 sm:px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-8 animate-fade-in">
          <div class="w-16 h-16 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-2xl flex items-center justify-center mx-auto mb-4">
            <span class="material-symbols-outlined text-white text-2xl">analytics</span>
          </div>
          <h2 class="text-3xl md:text-4xl font-bold text-white mb-2">Analytics Dashboard</h2>
          <p class="text-dark-300">Comprehensive insights into quiz performance and student engagement</p>
        </div>

        <!-- Stats Grid -->
        <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-8">
          <!-- Total Participants -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-4 md:p-6 animate-fade-in hover:border-primary-500/50 transition-all duration-300">
            <div class="flex items-center justify-between mb-3">
              <div class="w-10 h-10 md:w-12 md:h-12 bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-lg md:text-xl">group</span>
              </div>
            </div>
            <div class="text-2xl md:text-3xl font-bold text-white mb-1 animate-count-up" id="totalParticipants">0</div>
            <div class="text-xs md:text-sm text-dark-300">Total Participants</div>
          </div>

          <!-- Average Score -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-4 md:p-6 animate-fade-in hover:border-secondary-500/50 transition-all duration-300" style="animation-delay: 0.1s;">
            <div class="flex items-center justify-between mb-3">
              <div class="w-10 h-10 md:w-12 md:h-12 bg-gradient-to-r from-secondary-500 to-secondary-600 rounded-xl flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-lg md:text-xl">quiz</span>
              </div>
            </div>
            <div class="text-2xl md:text-3xl font-bold text-white mb-1 animate-count-up" id="averageScore">0%</div>
            <div class="text-xs md:text-sm text-dark-300">Average Score</div>
          </div>

          <!-- Passed Tests -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-4 md:p-6 animate-fade-in hover:border-green-500/50 transition-all duration-300" style="animation-delay: 0.2s;">
            <div class="flex items-center justify-between mb-3">
              <div class="w-10 h-10 md:w-12 md:h-12 bg-gradient-to-r from-green-500 to-green-600 rounded-xl flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-lg md:text-xl">verified</span>
              </div>
            </div>
            <div class="text-2xl md:text-3xl font-bold text-white mb-1 animate-count-up" id="passedTests">0</div>
            <div class="text-xs md:text-sm text-dark-300">Passed Tests</div>
          </div>

          <!-- Failed Tests -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-4 md:p-6 animate-fade-in hover:border-red-500/50 transition-all duration-300" style="animation-delay: 0.3s;">
            <div class="flex items-center justify-between mb-3">
              <div class="w-10 h-10 md:w-12 md:h-12 bg-gradient-to-r from-red-500 to-red-600 rounded-xl flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-lg md:text-xl">cancel</span>
              </div>
            </div>
            <div class="text-2xl md:text-3xl font-bold text-white mb-1 animate-count-up" id="failedTests">0</div>
            <div class="text-xs md:text-sm text-dark-300">Failed Tests</div>
          </div>
        </div>

        <!-- Additional Stats -->
        <div class="grid md:grid-cols-2 gap-6 mb-8">
          <!-- Average Time -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-6 animate-fade-in" style="animation-delay: 0.4s;">
            <div class="flex items-center justify-between mb-4">
              <div class="w-12 h-12 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-xl flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-xl">timer</span>
              </div>
            </div>
            <div class="text-3xl font-bold text-white mb-2" id="averageTime">0 mins</div>
            <div class="text-dark-300">Average Time Taken</div>
          </div>

          <!-- Completion Rate -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-6 animate-fade-in" style="animation-delay: 0.5s;">
            <div class="flex items-center justify-between mb-4">
              <div class="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-xl">speed</span>
              </div>
            </div>
            <div class="text-3xl font-bold text-white mb-2" id="completionRate">0%</div>
            <div class="text-dark-300">On-Time Completion Rate</div>
          </div>
        </div>

        <!-- Charts Section -->
        <div class="grid lg:grid-cols-2 gap-6 mb-8">
          <!-- Performance Chart -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-6 animate-fade-in" style="animation-delay: 0.6s;">
            <h3 class="text-xl font-bold text-white mb-4 flex items-center">
              <span class="material-symbols-outlined mr-2 text-primary-400">trending_up</span>
              Performance Trends
            </h3>
            <div class="h-64">
              <canvas id="performanceChart"></canvas>
            </div>
          </div>

          <!-- Pass/Fail Chart -->
          <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-6 animate-fade-in" style="animation-delay: 0.7s;">
            <h3 class="text-xl font-bold text-white mb-4 flex items-center">
              <span class="material-symbols-outlined mr-2 text-secondary-400">pie_chart</span>
              Pass/Fail Distribution
            </h3>
            <div class="h-64">
              <canvas id="passFailChart"></canvas>
            </div>
          </div>
        </div>

        <!-- Recent Results Table -->
        <div class="glass-effect bg-dark-800/50 border border-dark-700 rounded-2xl p-6 animate-fade-in" style="animation-delay: 0.8s;">
          <h3 class="text-xl font-bold text-white mb-6 flex items-center">
            <span class="material-symbols-outlined mr-2 text-primary-400">history</span>
            Recent Test Results
          </h3>
          
          <div class="overflow-x-auto">
            <table class="w-full">
              <thead>
                <tr class="border-b border-dark-600">
                  <th class="text-left py-3 px-4 text-dark-300 font-medium">Student</th>
                  <th class="text-left py-3 px-4 text-dark-300 font-medium">Score</th>
                  <th class="text-left py-3 px-4 text-dark-300 font-medium hidden sm:table-cell">Time</th>
                  <th class="text-left py-3 px-4 text-dark-300 font-medium hidden md:table-cell">Date</th>
                  <th class="text-left py-3 px-4 text-dark-300 font-medium">Status</th>
                </tr>
              </thead>
              <tbody id="recentResults">
                <!-- Results will be populated dynamically -->
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </main>

    <script>
        let performanceChart, passFailChart;

        async function fetchAnalyticsData() {
            try {
                const response = await fetch('/api/analytics');
                const data = await response.json();

                // Animate counter updates
                animateCounter('totalParticipants', data.totalParticipants);
                animateCounter('averageScore', Math.round(data.averageScore), '%');
                animateCounter('passedTests', data.passedTests);
                animateCounter('failedTests', data.failedTests);
                animateCounter('averageTime', Math.round(data.averageTime), ' mins');
                animateCounter('completionRate', Math.round(data.completionRate), '%');

                // Update charts
                updatePerformanceChart(data);
                updatePassFailChart(data.passedTests, data.failedTests);

                // Update recent results table
                updateRecentResults(data.recentResults);

            } catch (error) {
                console.error("Error fetching analytics data:", error);
                showError();
            }
        }

        function animateCounter(elementId, targetValue, suffix = '') {
            const element = document.getElementById(elementId);
            const startValue = 0;
            const duration = 2000;
            const startTime = performance.now();

            function updateCounter(currentTime) {
                const elapsed = currentTime - startTime;
                const progress = Math.min(elapsed / duration, 1);
                
                // Easing function for smooth animation
                const easeOutQuart = 1 - Math.pow(1 - progress, 4);
                const currentValue = Math.round(startValue + (targetValue - startValue) * easeOutQuart);
                
                element.textContent = currentValue + suffix;
                
                if (progress < 1) {
                    requestAnimationFrame(updateCounter);
                }
            }
            
            requestAnimationFrame(updateCounter);
        }

        function updatePerformanceChart(data) {
            const ctx = document.getElementById('performanceChart').getContext('2d');
            
            if (performanceChart) {
                performanceChart.destroy();
            }

            // Sample data for demonstration
            const labels = ['Week 1', 'Week 2', 'Week 3', 'Week 4'];
            const scores = [65, 72, 78, Math.round(data.averageScore)];

            performanceChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Average Score',
                        data: scores,
                        borderColor: '#0ea5e9',
                        backgroundColor: 'rgba(14, 165, 233, 0.1)',
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: '#0ea5e9',
                        pointBorderColor: '#fff',
                        pointRadius: 6,
                        pointHoverRadius: 8
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            },
                            ticks: {
                                color: '#94a3b8',
                                callback: value => `${value}%`
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            },
                            ticks: {
                                color: '#94a3b8'
                            }
                        }
                    }
                }
            });
        }

        function updatePassFailChart(passed, failed) {
            const ctx = document.getElementById('passFailChart').getContext('2d');
            
            if (passFailChart) {
                passFailChart.destroy();
            }

            passFailChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Passed', 'Failed'],
                    datasets: [{
                        data: [passed, failed],
                        backgroundColor: ['#10b981', '#ef4444'],
                        borderColor: ['#059669', '#dc2626'],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: '#94a3b8',
                                padding: 20,
                                usePointStyle: true
                            }
                        }
                    }
                }
            });
        }

        function updateRecentResults(results) {
            const tbody = document.getElementById('recentResults');
            
            if (!results || results.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="5" class="text-center py-8 text-dark-300">
                            <div class="flex flex-col items-center">
                                <span class="material-symbols-outlined text-4xl mb-2">quiz</span>
                                <span>No recent results available</span>
                            </div>
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = results.map(result => `
                <tr class="border-b border-dark-700 hover:bg-dark-700/30 transition-colors duration-200">
                    <td class="py-4 px-4">
                        <div class="flex items-center">
                            <div class="w-8 h-8 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center mr-3">
                                <span class="text-white text-sm font-bold">${result.studentName.charAt(0).toUpperCase()}</span>
                            </div>
                            <span class="text-white font-medium">${result.studentName}</span>
                        </div>
                    </td>
                    <td class="py-4 px-4">
                        <span class="text-2xl font-bold ${result.status === 'Passed' ? 'text-green-400' : 'text-red-400'}">${result.score}</span>
                    </td>
                    <td class="py-4 px-4 hidden sm:table-cell text-dark-300">${result.timeTaken}</td>
                    <td class="py-4 px-4 hidden md:table-cell text-dark-300">${result.date}</td>
                    <td class="py-4 px-4">
                        <span class="px-3 py-1 rounded-full text-xs font-medium ${result.status === 'Passed' ? 'bg-green-500/20 text-green-400 border border-green-500/30' : 'bg-red-500/20 text-red-400 border border-red-500/30'}">
                            ${result.status}
                        </span>
                    </td>
                </tr>
            `).join('');
        }

        function showError() {
            document.querySelector('main').innerHTML = `
                <div class="flex items-center justify-center min-h-screen">
                    <div class="text-center">
                        <div class="w-16 h-16 bg-red-600/20 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span class="material-symbols-outlined text-red-400 text-2xl">error</span>
                        </div>
                        <h2 class="text-2xl font-bold text-white mb-2">Error Loading Analytics</h2>
                        <p class="text-dark-300 mb-4">Unable to fetch analytics data</p>
                        <button onclick="location.reload()" class="px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white rounded-lg font-medium transition-colors duration-200">
                            <span class="material-symbols-outlined mr-2">refresh</span>
                            Retry
                        </button>
                    </div>
                </div>
            `;
        }

        // Fetch data when page loads
        document.addEventListener('DOMContentLoaded', fetchAnalyticsData);
    </script>
</body>
</html>