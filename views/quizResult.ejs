<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QuiziFY - Quiz Results</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined"
      rel="stylesheet"
    />
    <script>
      tailwind.config = {
        darkMode: 'class',
        theme: {
          extend: {
            fontFamily: {
              'inter': ['Inter', 'sans-serif'],
            },
            colors: {
              primary: {
                50: '#f0f9ff',
                500: '#0ea5e9',
                600: '#0284c7',
                700: '#0369a1',
              },
              secondary: {
                500: '#d946ef',
                600: '#c026d3',
              },
              dark: {
                50: '#f8fafc',
                300: '#cbd5e1',
                400: '#94a3b8',
                500: '#64748b',
                600: '#475569',
                700: '#334155',
                800: '#1e293b',
                900: '#0f172a',
              }
            },
            animation: {
              'fade-in': 'fadeIn 0.5s ease-out',
              'slide-up': 'slideUp 0.6s ease-out',
              'bounce-gentle': 'bounceGentle 2s infinite',
              'count-up': 'countUp 2s ease-out',
              'confetti': 'confetti 3s ease-out infinite',
            },
            keyframes: {
              fadeIn: {
                '0%': { opacity: '0', transform: 'translateY(10px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' },
              },
              slideUp: {
                '0%': { opacity: '0', transform: 'translateY(30px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' },
              },
              bounceGentle: {
                '0%, 100%': { transform: 'translateY(0)' },
                '50%': { transform: 'translateY(-10px)' },
              },
              countUp: {
                '0%': { transform: 'scale(0.5)', opacity: '0' },
                '50%': { transform: 'scale(1.2)' },
                '100%': { transform: 'scale(1)', opacity: '1' },
              },
              confetti: {
                '0%': { transform: 'translateY(-100vh) rotate(0deg)', opacity: '1' },
                '100%': { transform: 'translateY(100vh) rotate(360deg)', opacity: '0' },
              }
            }
          }
        }
      }
    </script>
    <style>
      body {
        font-family: 'Inter', sans-serif;
      }
      .gradient-text {
        background: linear-gradient(135deg, #0ea5e9, #d946ef);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }
      .glass-effect {
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
      }
      .confetti-piece {
        position: absolute;
        width: 10px;
        height: 10px;
        background: linear-gradient(45deg, #0ea5e9, #d946ef);
        animation: confetti 3s linear infinite;
      }
      .score-circle {
        background: conic-gradient(from 0deg, #0ea5e9 0%, #d946ef var(--percentage), #334155 var(--percentage));
      }
    </style>
</head>
<body class="dark bg-dark-900 text-white min-h-screen">
    <!-- Theme Toggle Script -->
    <script>
      const theme = localStorage.getItem('theme') || 'dark';
      document.documentElement.classList.toggle('dark', theme === 'dark');
      
      function toggleTheme() {
        const isDark = document.documentElement.classList.contains('dark');
        document.documentElement.classList.toggle('dark', !isDark);
        localStorage.setItem('theme', isDark ? 'light' : 'dark');
      }
    </script>

    <!-- Confetti Animation -->
    <div id="confetti-container" class="fixed inset-0 pointer-events-none z-10"></div>

    <!-- Navigation -->
    <nav class="fixed top-0 w-full z-50 glass-effect bg-dark-800/80 border-b border-dark-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center space-x-4">
            <div class="flex items-center space-x-2">
              <div class="w-8 h-8 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
                <span class="material-symbols-outlined text-white text-lg">quiz</span>
              </div>
              <h1 class="text-2xl font-bold gradient-text">QUIZIFY</h1>
            </div>
          </div>
          
          <div class="flex items-center space-x-4">
            <!-- Theme Toggle -->
            <button 
              onclick="toggleTheme()" 
              class="p-2 rounded-lg bg-dark-700 hover:bg-dark-600 transition-colors duration-200"
              aria-label="Toggle theme"
            >
              <span class="material-symbols-outlined dark:hidden">dark_mode</span>
              <span class="material-symbols-outlined hidden dark:block">light_mode</span>
            </button>
            
            <form action="/logout" method="post">
              <button class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors duration-200">
                Logout
              </button>
            </form>
          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-24 pb-8 px-4 sm:px-6 lg:px-8">
      <div class="max-w-6xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-12 animate-fade-in">
          <div class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-green-500/20 to-primary-500/20 rounded-full border border-green-500/30 mb-6">
            <span class="material-symbols-outlined text-green-400 mr-2">check_circle</span>
            <span class="text-sm font-medium text-green-300">Quiz Completed Successfully!</span>
          </div>
          
          <h1 class="text-4xl md:text-5xl font-bold mb-4">
            <span class="gradient-text"><%= quiz.title %></span> Results
          </h1>
          <p class="text-xl text-dark-300">Congratulations on completing the quiz!</p>
        </div>

        <!-- Score Overview -->
        <div class="grid lg:grid-cols-3 gap-8 mb-12">
          <!-- Main Score Circle -->
          <div class="lg:col-span-1">
            <div class="glass-effect bg-dark-800/50 rounded-2xl p-8 border border-dark-700 text-center animate-slide-up">
              <div class="relative w-48 h-48 mx-auto mb-6">
                <div class="score-circle w-full h-full rounded-full flex items-center justify-center" 
                     style="--percentage: <%= (totalScore/totalPossiblePoints * 100) %>%">
                  <div class="w-36 h-36 bg-dark-800 rounded-full flex flex-col items-center justify-center">
                    <div class="text-4xl font-bold gradient-text animate-count-up" id="score-display">
                      <%= totalScore %>
                    </div>
                    <div class="text-dark-300">out of <%= totalPossiblePoints %></div>
                  </div>
                </div>
              </div>
              
              <div class="text-3xl font-bold gradient-text mb-2">
                <%= Math.round((totalScore / totalPossiblePoints) * 100) %>%
              </div>
              <div class="text-dark-300">Overall Score</div>
            </div>
          </div>

          <!-- Stats Cards -->
          <div class="lg:col-span-2 grid md:grid-cols-2 gap-6">
            <!-- Correct Answers -->
            <div class="glass-effect bg-dark-800/50 rounded-2xl p-6 border border-dark-700 animate-slide-up" style="animation-delay: 0.1s;">
              <div class="flex items-center space-x-4">
                <div class="w-16 h-16 bg-gradient-to-r from-green-500 to-green-600 rounded-2xl flex items-center justify-center">
                  <span class="material-symbols-outlined text-white text-2xl">check_circle</span>
                </div>
                <div>
                  <div class="text-3xl font-bold text-white"><%= correctcount %></div>
                  <div class="text-dark-300">Correct Answers</div>
                  <div class="text-sm text-green-400">out of <%= totalquecount %> questions</div>
                </div>
              </div>
            </div>

            <!-- Incorrect Answers -->
            <div class="glass-effect bg-dark-800/50 rounded-2xl p-6 border border-dark-700 animate-slide-up" style="animation-delay: 0.2s;">
              <div class="flex items-center space-x-4">
                <div class="w-16 h-16 bg-gradient-to-r from-red-500 to-red-600 rounded-2xl flex items-center justify-center">
                  <span class="material-symbols-outlined text-white text-2xl">cancel</span>
                </div>
                <div>
                  <div class="text-3xl font-bold text-white"><%= totalquecount - correctcount %></div>
                  <div class="text-dark-300">Incorrect Answers</div>
                  <div class="text-sm text-red-400">out of <%= totalquecount %> questions</div>
                </div>
              </div>
            </div>

            <!-- Time Taken -->
            <div class="glass-effect bg-dark-800/50 rounded-2xl p-6 border border-dark-700 animate-slide-up" style="animation-delay: 0.3s;">
              <div class="flex items-center space-x-4">
                <div class="w-16 h-16 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-2xl flex items-center justify-center">
                  <span class="material-symbols-outlined text-white text-2xl">timer</span>
                </div>
                <div>
                  <div class="text-3xl font-bold text-white">
                    <% 
                      const minutes = Math.floor(timeTaken);
                      const seconds = Math.floor((timeTaken % 1) * 60);
                    %>
                    <%= minutes %>:<%= seconds.toString().padStart(2, '0') %>
                  </div>
                  <div class="text-dark-300">Time Taken</div>
                  <div class="text-sm <%= timeTaken <= timeLimit ? 'text-green-400' : 'text-red-400' %>">
                    Limit: <%= timeLimit %> minutes
                  </div>
                </div>
              </div>
            </div>

            <!-- Accuracy -->
            <div class="glass-effect bg-dark-800/50 rounded-2xl p-6 border border-dark-700 animate-slide-up" style="animation-delay: 0.4s;">
              <div class="flex items-center space-x-4">
                <div class="w-16 h-16 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-2xl flex items-center justify-center">
                  <span class="material-symbols-outlined text-white text-2xl">target</span>
                </div>
                <div>
                  <div class="text-3xl font-bold text-white">
                    <%= Math.round((correctcount / totalquecount) * 100) %>%
                  </div>
                  <div class="text-dark-300">Accuracy</div>
                  <div class="text-sm text-yellow-400">
                    <%= correctcount %> of <%= totalquecount %> correct
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Performance Analysis -->
        <div class="glass-effect bg-dark-800/50 rounded-2xl p-8 border border-dark-700 mb-8 animate-fade-in" style="animation-delay: 0.5s;">
          <h2 class="text-2xl font-bold mb-6 flex items-center">
            <span class="material-symbols-outlined mr-3 text-primary-400">analytics</span>
            Performance Analysis
          </h2>
          
          <div class="grid md:grid-cols-3 gap-6">
            <!-- Time Status -->
            <div class="text-center p-6 bg-dark-700/50 rounded-xl">
              <div class="w-12 h-12 mx-auto mb-4 rounded-full flex items-center justify-center <%= timeTaken <= timeLimit ? 'bg-green-500' : 'bg-red-500' %>">
                <span class="material-symbols-outlined text-white">
                  <%= timeTaken <= timeLimit ? 'schedule' : 'schedule_send' %>
                </span>
              </div>
              <div class="text-lg font-semibold <%= timeTaken <= timeLimit ? 'text-green-400' : 'text-red-400' %>">
                <%= timeTaken <= timeLimit ? 'On Time' : 'Overtime' %>
              </div>
              <div class="text-sm text-dark-300 mt-2">
                <%= timeTaken <= timeLimit ? 'Completed within time limit' : 'Exceeded time limit' %>
              </div>
            </div>

            <!-- Grade -->
            <div class="text-center p-6 bg-dark-700/50 rounded-xl">
              <div class="w-12 h-12 mx-auto mb-4 rounded-full flex items-center justify-center bg-gradient-to-r from-primary-500 to-secondary-500">
                <span class="material-symbols-outlined text-white">grade</span>
              </div>
              <div class="text-lg font-semibold text-white">
                <% 
                  const percentage = Math.round((totalScore / totalPossiblePoints) * 100);
                  let grade = 'F';
                  if (percentage >= 90) grade = 'A+';
                  else if (percentage >= 85) grade = 'A';
                  else if (percentage >= 80) grade = 'B+';
                  else if (percentage >= 75) grade = 'B';
                  else if (percentage >= 70) grade = 'C+';
                  else if (percentage >= 65) grade = 'C';
                  else if (percentage >= 60) grade = 'D';
                %>
                Grade: <%= grade %>
              </div>
              <div class="text-sm text-dark-300 mt-2">
                Based on your score
              </div>
            </div>

            <!-- Status -->
            <div class="text-center p-6 bg-dark-700/50 rounded-xl">
              <div class="w-12 h-12 mx-auto mb-4 rounded-full flex items-center justify-center <%= percentage >= 60 ? 'bg-green-500' : 'bg-red-500' %>">
                <span class="material-symbols-outlined text-white">
                  <%= percentage >= 60 ? 'check_circle' : 'cancel' %>
                </span>
              </div>
              <div class="text-lg font-semibold <%= percentage >= 60 ? 'text-green-400' : 'text-red-400' %>">
                <%= percentage >= 60 ? 'Passed' : 'Failed' %>
              </div>
              <div class="text-sm text-dark-300 mt-2">
                <%= percentage >= 60 ? 'Great job!' : 'Keep practicing!' %>
              </div>
            </div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in" style="animation-delay: 0.6s;">
          <a href="/student-dashboard" 
             class="px-8 py-4 bg-gradient-to-r from-primary-500 to-secondary-500 hover:from-primary-600 hover:to-secondary-600 text-white rounded-xl font-semibold text-lg transition-all duration-300 transform hover:scale-105 flex items-center justify-center">
            <span class="material-symbols-outlined mr-2">dashboard</span>
            Back to Dashboard
          </a>
          
          <button onclick="shareResults()" 
                  class="px-8 py-4 bg-dark-700 hover:bg-dark-600 text-white rounded-xl font-semibold text-lg transition-colors duration-200 flex items-center justify-center">
            <span class="material-symbols-outlined mr-2">share</span>
            Share Results
          </button>
        </div>
      </div>
    </main>

    <script>
      // Confetti animation
      function createConfetti() {
        const container = document.getElementById('confetti-container');
        const colors = ['#0ea5e9', '#d946ef', '#10b981', '#f59e0b', '#ef4444'];
        
        for (let i = 0; i < 50; i++) {
          const confetti = document.createElement('div');
          confetti.className = 'confetti-piece';
          confetti.style.left = Math.random() * 100 + '%';
          confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
          confetti.style.animationDelay = Math.random() * 3 + 's';
          confetti.style.animationDuration = (Math.random() * 3 + 2) + 's';
          container.appendChild(confetti);
          
          // Remove confetti after animation
          setTimeout(() => {
            confetti.remove();
          }, 5000);
        }
      }

      // Animate score count-up
      function animateScore() {
        const scoreDisplay = document.getElementById('score-display');
        const finalScore = <%= totalScore %>;
        let currentScore = 0;
        const increment = Math.ceil(finalScore / 30);
        
        const timer = setInterval(() => {
          currentScore += increment;
          if (currentScore >= finalScore) {
            currentScore = finalScore;
            clearInterval(timer);
          }
          scoreDisplay.textContent = currentScore;
        }, 50);
      }

      // Share results function
      function shareResults() {
        const score = <%= Math.round((totalScore / totalPossiblePoints) * 100) %>;
        const quizTitle = '<%= quiz.title %>';
        
        if (navigator.share) {
          navigator.share({
            title: 'Quiz Results - Quizify',
            text: `I just scored ${score}% on the "${quizTitle}" quiz on Quizify!`,
            url: window.location.origin
          });
        } else {
          // Fallback to clipboard
          const text = `I just scored ${score}% on the "${quizTitle}" quiz on Quizify! Check it out at ${window.location.origin}`;
          navigator.clipboard.writeText(text).then(() => {
            alert('Results copied to clipboard!');
          });
        }
      }

      // Initialize animations
      document.addEventListener('DOMContentLoaded', function() {
        const score = <%= Math.round((totalScore / totalPossiblePoints) * 100) %>;
        
        // Show confetti for good scores
        if (score >= 70) {
          setTimeout(createConfetti, 500);
        }
        
        // Animate score
        setTimeout(animateScore, 1000);
      });
    </script>
</body>
</html>