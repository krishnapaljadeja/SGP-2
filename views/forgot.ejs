<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quizify</title>
    <style>
      @import url(https://fonts.googleapis.com/css2?family=Lato&display=swap);
      
      @import url(https://fonts.googleapis.com/css2?family=Open+Sans&display=swap);
      
      @import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200);
      
      /*! tailwindcss v3.4.11 | MIT License | https://tailwindcss.com*/
      *,
      :after,
      :before {
        border: 0 solid #e5e7eb;
        box-sizing: border-box;
      }
      :after,
      :before {
        --tw-content: "";
      }
      :host,
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        font-family:
          Open Sans,
          ui-sans-serif,
          system-ui,
          sans-serif,
          Apple Color Emoji,
          Segoe UI Emoji,
          Segoe UI Symbol,
          Noto Color Emoji;
        font-feature-settings: normal;
        font-variation-settings: normal;
        -moz-tab-size: 4;
        tab-size: 4;
        -webkit-tap-highlight-color: transparent;
      }
      body {
        line-height: inherit;
        margin: 0;
      }
      hr {
        border-top-width: 1px;
        color: inherit;
        height: 0;
      }
      abbr:where([title]) {
        text-decoration: underline dotted;
      }
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-size: inherit;
        font-weight: inherit;
      }
      a {
        color: inherit;
        text-decoration: inherit;
      }
      b,
      strong {
        font-weight: bolder;
      }
      code,
      kbd,
      pre,
      samp {
        font-family:
          ui-monospace,
          SFMono-Regular,
          Menlo,
          Monaco,
          Consolas,
          Liberation Mono,
          Courier New,
          monospace;
        font-feature-settings: normal;
        font-size: 1em;
        font-variation-settings: normal;
      }
      small {
        font-size: 80%;
      }
      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
      }
      sub {
        bottom: -0.25em;
      }
      sup {
        top: -0.5em;
      }
      table {
        border-collapse: collapse;
        border-color: inherit;
        text-indent: 0;
      }
      button,
      input,
      optgroup,
      select,
      textarea {
        color: inherit;
        font-family: inherit;
        font-feature-settings: inherit;
        font-size: 100%;
        font-variation-settings: inherit;
        font-weight: inherit;
        letter-spacing: inherit;
        line-height: inherit;
        margin: 0;
        padding: 0;
      }
      button,
      select {
        text-transform: none;
      }
      button,
      input:where([type="button"]),
      input:where([type="reset"]),
      input:where([type="submit"]) {
        -webkit-appearance: button;
        background-color: transparent;
        background-image: none;
      }
      :-moz-focusring {
        outline: auto;
      }
      :-moz-ui-invalid {
        box-shadow: none;
      }
      progress {
        vertical-align: baseline;
      }
      ::-webkit-inner-spin-button,
      ::-webkit-outer-spin-button {
        height: auto;
      }
      [type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }
      ::-webkit-search-decoration {
        -webkit-appearance: none;
      }
      ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }
      summary {
        display: list-item;
      }
      blockquote,
      dd,
      dl,
      figure,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      hr,
      p,
      pre {
        margin: 0;
      }
      fieldset {
        margin: 0;
      }
      fieldset,
      legend {
        padding: 0;
      }
      menu,
      ol,
      ul {
        list-style: none;
        margin: 0;
        padding: 0;
      }
      dialog {
        padding: 0;
      }
      textarea {
        resize: vertical;
      }
      input::placeholder,
      textarea::placeholder {
        color: #9ca3af;
        opacity: 1;
      }
      [role="button"],
      button {
        cursor: pointer;
      }
      :disabled {
        cursor: default;
      }
      audio,
      canvas,
      embed,
      iframe,
      img,
      object,
      svg,
      video {
        display: block;
        vertical-align: middle;
      }
      img,
      video {
        height: auto;
        max-width: 100%;
      }
      [hidden] {
        display: none;
      }
      *,
      :after,
      :before {
        --tw-border-spacing-x: 0;
        --tw-border-spacing-y: 0;
        --tw-translate-x: 0;
        --tw-translate-y: 0;
        --tw-rotate: 0;
        --tw-skew-x: 0;
        --tw-skew-y: 0;
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        --tw-pan-x: ;
        --tw-pan-y: ;
        --tw-pinch-zoom: ;
        --tw-scroll-snap-strictness: proximity;
        --tw-gradient-from-position: ;
        --tw-gradient-via-position: ;
        --tw-gradient-to-position: ;
        --tw-ordinal: ;
        --tw-slashed-zero: ;
        --tw-numeric-figure: ;
        --tw-numeric-spacing: ;
        --tw-numeric-fraction: ;
        --tw-ring-inset: ;
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: rgba(59, 130, 246, 0.5);
        --tw-ring-offset-shadow: 0 0 #0000;
        --tw-ring-shadow: 0 0 #0000;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-colored: 0 0 #0000;
        --tw-blur: ;
        --tw-brightness: ;
        --tw-contrast: ;
        --tw-grayscale: ;
        --tw-hue-rotate: ;
        --tw-invert: ;
        --tw-saturate: ;
        --tw-sepia: ;
        --tw-drop-shadow: ;
        --tw-backdrop-blur: ;
        --tw-backdrop-brightness: ;
        --tw-backdrop-contrast: ;
        --tw-backdrop-grayscale: ;
        --tw-backdrop-hue-rotate: ;
        --tw-backdrop-invert: ;
        --tw-backdrop-opacity: ;
        --tw-backdrop-saturate: ;
        --tw-backdrop-sepia: ;
        --tw-contain-size: ;
        --tw-contain-layout: ;
        --tw-contain-paint: ;
        --tw-contain-style: ;
      }
      ::backdrop {
        --tw-border-spacing-x: 0;
        --tw-border-spacing-y: 0;
        --tw-translate-x: 0;
        --tw-translate-y: 0;
        --tw-rotate: 0;
        --tw-skew-x: 0;
        --tw-skew-y: 0;
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        --tw-pan-x: ;
        --tw-pan-y: ;
        --tw-pinch-zoom: ;
        --tw-scroll-snap-strictness: proximity;
        --tw-gradient-from-position: ;
        --tw-gradient-via-position: ;
        --tw-gradient-to-position: ;
        --tw-ordinal: ;
        --tw-slashed-zero: ;
        --tw-numeric-figure: ;
        --tw-numeric-spacing: ;
        --tw-numeric-fraction: ;
        --tw-ring-inset: ;
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: rgba(59, 130, 246, 0.5);
        --tw-ring-offset-shadow: 0 0 #0000;
        --tw-ring-shadow: 0 0 #0000;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-colored: 0 0 #0000;
        --tw-blur: ;
        --tw-brightness: ;
        --tw-contrast: ;
        --tw-grayscale: ;
        --tw-hue-rotate: ;
        --tw-invert: ;
        --tw-saturate: ;
        --tw-sepia: ;
        --tw-drop-shadow: ;
        --tw-backdrop-blur: ;
        --tw-backdrop-brightness: ;
        --tw-backdrop-contrast: ;
        --tw-backdrop-grayscale: ;
        --tw-backdrop-hue-rotate: ;
        --tw-backdrop-invert: ;
        --tw-backdrop-opacity: ;
        --tw-backdrop-saturate: ;
        --tw-backdrop-sepia: ;
        --tw-contain-size: ;
        --tw-contain-layout: ;
        --tw-contain-paint: ;
        --tw-contain-style: ;
      }
      #webcrumbs .absolute {
        position: absolute;
      }
      #webcrumbs .relative {
        position: relative;
      }
      #webcrumbs .left-3 {
        left: 12px;
      }
      #webcrumbs .top-1\/2 {
        top: 50%;
      }
      #webcrumbs .mb-1 {
        margin-bottom: 4px;
      }
      #webcrumbs .mb-2 {
        margin-bottom: 8px;
      }
      #webcrumbs .mb-6 {
        margin-bottom: 24px;
      }
      #webcrumbs .ml-1 {
        margin-left: 4px;
      }
      #webcrumbs .mt-2 {
        margin-top: 8px;
      }
      #webcrumbs .mt-6 {
        margin-top: 24px;
      }
      #webcrumbs .mt-8 {
        margin-top: 32px;
      }
      #webcrumbs .block {
        display: block;
      }
      #webcrumbs .flex {
        display: flex;
      }
      #webcrumbs .inline-flex {
        display: inline-flex;
      }
      #webcrumbs .hidden {
        display: none;
      }
      #webcrumbs .w-\[400px\] {
        width: 400px;
      }
      #webcrumbs .w-full {
        width: 100%;
      }
      #webcrumbs .-translate-y-1\/2 {
        --tw-translate-y: -50%;
      }
      #webcrumbs .-translate-y-1\/2,
      #webcrumbs .transform {
        transform: translate(var(--tw-translate-x), var(--tw-translate-y))
          rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
          scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      #webcrumbs .flex-row {
        flex-direction: row;
      }
      #webcrumbs .flex-col {
        flex-direction: column;
      }
      #webcrumbs .items-center {
        align-items: center;
      }
      #webcrumbs .justify-between {
        justify-content: space-between;
      }
      #webcrumbs .gap-1 {
        gap: 4px;
      }
      #webcrumbs .gap-4 {
        gap: 16px;
      }
      #webcrumbs :is(.space-y-4 > :not([hidden]) ~ :not([hidden])) {
        --tw-space-y-reverse: 0;
        margin-bottom: calc(16px * var(--tw-space-y-reverse));
        margin-top: calc(16px * (1 - var(--tw-space-y-reverse)));
      }
      #webcrumbs .rounded-lg {
        border-radius: 24px;
      }
      #webcrumbs .border {
        border-width: 1px;
      }
      #webcrumbs .border-t {
        border-top-width: 1px;
      }
      #webcrumbs .bg-blue-500 {
        --tw-bg-opacity: 1;
        background-color: rgb(59 130 246 / var(--tw-bg-opacity));
      }
      #webcrumbs .bg-white {
        --tw-bg-opacity: 1;
        background-color: rgb(255 255 255 / var(--tw-bg-opacity));
      }
      #webcrumbs .p-8 {
        padding: 32px;
      }
      #webcrumbs .px-4 {
        padding-left: 16px;
        padding-right: 16px;
      }
      #webcrumbs .py-2 {
        padding-bottom: 8px;
        padding-top: 8px;
      }
      #webcrumbs .pl-10 {
        padding-left: 40px;
      }
      #webcrumbs .pr-4 {
        padding-right: 16px;
      }
      #webcrumbs .pt-6 {
        padding-top: 24px;
      }
      #webcrumbs .text-center {
        text-align: center;
      }
      #webcrumbs .text-2xl {
        font-size: 24px;
        line-height: 31.200000000000003px;
      }
      #webcrumbs .text-5xl {
        font-size: 48px;
        line-height: 52.800000000000004px;
      }
      #webcrumbs .text-sm {
        font-size: 14px;
        line-height: 21px;
      }
      #webcrumbs .font-bold {
        font-weight: 700;
      }
      #webcrumbs .font-medium {
        font-weight: 500;
      }
      #webcrumbs .text-blue-500 {
        --tw-text-opacity: 1;
        color: rgb(59 130 246 / var(--tw-text-opacity));
      }
      #webcrumbs .text-white {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity));
      }
      #webcrumbs .shadow-xl {
        --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
          0 8px 10px -6px rgba(0, 0, 0, 0.1);
        --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),
          0 8px 10px -6px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
          var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }
      #webcrumbs .outline-none {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      #webcrumbs .transition-all {
        transition-duration: 0.15s;
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }
      #webcrumbs .transition-colors {
        transition-duration: 0.15s;
        transition-property: color, background-color, border-color,
          text-decoration-color, fill, stroke;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }
      #webcrumbs .transition-transform {
        transition-duration: 0.15s;
        transition-property: transform;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }
      #webcrumbs .duration-300 {
        transition-duration: 0.3s;
      }
      #webcrumbs {
        font-family: Open Sans !important;
        font-size: 16px !important;
      }
      #webcrumbs .hover\:scale-110:hover {
        --tw-scale-x: 1.1;
        --tw-scale-y: 1.1;
      }
      #webcrumbs .hover\:scale-110:hover,
      #webcrumbs .hover\:scale-\[1\.02\]:hover {
        transform: translate(var(--tw-translate-x), var(--tw-translate-y))
          rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
          scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      #webcrumbs .hover\:scale-\[1\.02\]:hover {
        --tw-scale-x: 1.02;
        --tw-scale-y: 1.02;
      }
      #webcrumbs .hover\:bg-blue-600:hover {
        --tw-bg-opacity: 1;
        background-color: rgb(37 99 235 / var(--tw-bg-opacity));
      }
      #webcrumbs .hover\:text-blue-500:hover {
        --tw-text-opacity: 1;
        color: rgb(59 130 246 / var(--tw-text-opacity));
      }
      #webcrumbs .hover\:text-blue-600:hover {
        --tw-text-opacity: 1;
        color: rgb(37 99 235 / var(--tw-text-opacity));
      }
      #webcrumbs .hover\:underline:hover {
        text-decoration-line: underline;
      }
      #webcrumbs .focus\:border-blue-500:focus {
        --tw-border-opacity: 1;
        border-color: rgb(59 130 246 / var(--tw-border-opacity));
      }
      #webcrumbs .focus\:ring-2:focus {
        --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
          var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
          calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
          var(--tw-shadow, 0 0 #0000);
      }
      #webcrumbs .focus\:ring-blue-500:focus {
        --tw-ring-opacity: 1;
        --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));
      }
      #webcrumbs :is(.group:hover .group-hover\:-translate-x-1) {
        --tw-translate-x: -4px;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y))
          rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
          scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      
      body {
        line-height: inherit;
        padding: 24px;
        display: flex;
        flex-direction: column;
        min-width: 100vw;
        min-height: 100vh;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #ffffff, #d4d4d4);
      }
    </style>
  </head>
  <body>
    <div id="webcrumbs">
        <div class="w-[400px] bg-white rounded-lg shadow-xl p-8">
            <!-- Header Section -->
            <div class="flex flex-col items-center mb-6">
                <span class="material-symbols-outlined text-5xl mb-2 hover:scale-110 transition-transform duration-300">
                    lock_reset
                </span>
                <h1 class="text-2xl font-bold">Forgot Password?</h1>
                <p class="text-center mt-2">Enter your email address to proceed.</p>
            </div>

            <!-- Form Section -->
            <form id="forgotForm" class="space-y-4">
                <!-- Email Input -->
                <div id="emailSection">
                    <!-- <label class="block text-sm font-medium mb-1">Email Address</label> -->
                    <div class="relative">
                        <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 transition-colors duration-300">
                            mail
                        </span>
                        <input name="email" id="email" type="email" class="w-full pl-10 pr-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 
                        focus:border-blue-500 transition-all duration-300 outline-none" placeholder="Enter your email" required />
                    </div>
                    <br>
                    <button type="button" id="sendOtpBtn" class="w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg 
                    transform hover:scale-[1.02] transition-all duration-300 mt-4">
                        Send OTP
                    </button>
                </div>

                <!-- OTP Input (Hidden by Default) -->
                <div class="hidden" id="otpSection">
                    <label class="block text-sm font-medium mb-1">OTP Code</label>
                    <div class="relative">
                        <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 transition-colors duration-300">
                            lock
                        </span>
                        <input name="fotp" id="fotp" type="text" class="w-full pl-10 pr-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 
                        focus:border-blue-500 transition-all duration-300 outline-none" placeholder="Enter OTP code" maxLength="6" required />
                    </div>
                </div>

                <!-- New Password Input (Hidden by Default) -->
                <div class="hidden" id="newPasswordSection">
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium mb-1">New Password</label>
                            <div class="relative">
                                <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 transition-colors duration-300">
                                    lock
                                </span>
                                <input name="newpassword" id="newpassword" type="password" class="w-full pl-10 pr-4 py-2 border rounded-lg focus:ring-2 
                                focus:ring-blue-500 focus:border-blue-500 transition-all duration-300 outline-none" 
                                placeholder="Enter new password" required />
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium mb-1">Confirm Password</label>
                            <div class="relative">
                                <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 transition-colors duration-300">
                                    lock_reset
                                </span>
                                <input name="cnfpassword" id="cnfpassword" type="password" class="w-full pl-10 pr-4 py-2 border rounded-lg focus:ring-2 
                                focus:ring-blue-500 focus:border-blue-500 transition-all duration-300 outline-none" 
                                placeholder="Confirm new password" required />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Submit Button (Hidden Initially) -->
                <button type="submit" id="resetPasswordBtn" class="w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg 
                transform hover:scale-[1.02] transition-all duration-300 mt-4 hidden">
                    Reset Password
                </button>
            </form>

            <!-- Back to Login -->
            <div class="mt-6 text-center">
                <a href="/" class="inline-flex items-center gap-1 hover:text-blue-500 hover:underline transition-all duration-300 group">
                    <span class="material-symbols-outlined text-sm group-hover:-translate-x-1 transition-transform duration-300">
                        arrow_back
                    </span>
                    Back to Login
                </a>
            </div>

            <!-- Support Section -->
            <!-- <div class="mt-8 border-t pt-6">
                <p class="text-sm text-center">
                    Need help?
                    <a href="#" class="text-blue-500 hover:text-blue-600 ml-1 font-medium hover:underline transition-all duration-300">
                        Contact Support
                    </a>
                </p>
            </div> -->
        </div>
    </div>
</body>

<script>
document.getElementById("sendOtpBtn").addEventListener("click", async function () {
    const email = document.getElementById("email").value;
    
    if (!email) {
        alert("Please enter an email address.");
        return;
    }

    try {
        const response = await fetch("/forgot", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email }),
        });

        const result = await response.text();
        console.log("Response from server:", result);

        if (response.ok) {
            alert(result); // Show success message
            console.log("OTP sent successfully.");

            // Ensure UI updates properly
            document.getElementById("otpSection").classList.remove("hidden");
            document.getElementById("newPasswordSection").classList.remove("hidden");
            document.getElementById("resetPasswordBtn").classList.remove("hidden");

            // Hide Send OTP Button
            document.getElementById("sendOtpBtn").style.display = "none";
        } else {
            alert(result); // Show error message
        }
    } catch (error) {
        console.error("Error:", error);
        alert("Something went wrong!");
    }
});

// Handle Password Reset
document.getElementById("forgotForm").addEventListener("submit", async function (event) {
    event.preventDefault();

    const email = document.getElementById("email").value;
    const otp = document.getElementById("fotp").value;
    const newPassword = document.getElementById("newpassword").value;
    const confirmPassword = document.getElementById("cnfpassword").value;

    if (newPassword !== confirmPassword) {
        alert("Passwords do not match!");
        return;
    }

    try {
        const response = await fetch("/reset-password", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, fotp: otp, newpassword: newPassword, cnfpassword: confirmPassword }),
        });

        const result = await response.text();
        console.log("Password Reset Response:", result);

        if (response.ok) {
            alert(result);
            window.location.href = "/"; // Redirect to login page after success
        } else {
            alert(result);
        }
    } catch (error) {
        console.error("Error:", error);
        alert("Something went wrong!");
    }
});


</script>

</html>