<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QuiziFY - Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined"
      rel="stylesheet"
    />
    <script>
      tailwind.config = {
        darkMode: 'class',
        theme: {
          extend: {
            fontFamily: {
              'inter': ['Inter', 'sans-serif'],
            },
            colors: {
              primary: {
                50: '#f0f9ff',
                500: '#0ea5e9',
                600: '#0284c7',
                700: '#0369a1',
              },
              secondary: {
                500: '#d946ef',
                600: '#c026d3',
              },
              dark: {
                50: '#f8fafc',
                300: '#cbd5e1',
                400: '#94a3b8',
                500: '#64748b',
                600: '#475569',
                700: '#334155',
                800: '#1e293b',
                900: '#0f172a',
              }
            },
            animation: {
              'fade-in': 'fadeIn 0.5s ease-out',
              'slide-up': 'slideUp 0.6s ease-out',
              'float': 'float 3s ease-in-out infinite',
              'pulse-glow': 'pulseGlow 2s ease-in-out infinite',
            },
            keyframes: {
              fadeIn: {
                '0%': { opacity: '0', transform: 'translateY(10px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' },
              },
              slideUp: {
                '0%': { opacity: '0', transform: 'translateY(30px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' },
              },
              float: {
                '0%, 100%': { transform: 'translateY(0px)' },
                '50%': { transform: 'translateY(-10px)' },
              },
              pulseGlow: {
                '0%, 100%': { boxShadow: '0 0 20px rgba(14, 165, 233, 0.3)' },
                '50%': { boxShadow: '0 0 40px rgba(14, 165, 233, 0.6)' },
              }
            }
          }
        }
      }
    </script>
    <style>
      body {
        font-family: 'Inter', sans-serif;
      }
      .gradient-text {
        background: linear-gradient(135deg, #0ea5e9, #d946ef);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }
      .glass-effect {
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
      }
    </style>
  </head>
  <body class="bg-gray-50 dark:bg-dark-900 text-gray-900 dark:text-white transition-colors duration-300">
    <!-- Theme Toggle Script -->
    <script>
      function initializeTheme() {
        const savedTheme = localStorage.getItem('theme');
        const theme = savedTheme || 'dark';
        
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
          document.body.classList.add('dark');
          document.body.className = 'bg-dark-900 text-white transition-colors duration-300';
        } else {
          document.documentElement.classList.remove('dark');
          document.body.classList.remove('dark');
          document.body.className = 'bg-gray-50 text-gray-900 transition-colors duration-300';
        }
        
        localStorage.setItem('theme', theme);
      }
      
      function toggleTheme() {
        const isDark = document.documentElement.classList.contains('dark');
        
        if (isDark) {
          document.documentElement.classList.remove('dark');
          document.body.classList.remove('dark');
          document.body.className = 'bg-gray-50 text-gray-900 transition-colors duration-300';
          localStorage.setItem('theme', 'light');
        } else {
          document.documentElement.classList.add('dark');
          document.body.classList.add('dark');
          document.body.className = 'bg-dark-900 text-white transition-colors duration-300';
          localStorage.setItem('theme', 'dark');
        }
      }
      
      initializeTheme();
    </script>

    <div class="flex min-h-screen">
      <!-- Sidebar -->
      <aside class="w-64 glass-effect bg-white/50 dark:bg-dark-800/50 border-r border-gray-200 dark:border-dark-700 fixed h-full z-40">
        <div class="p-6">
          <!-- Logo -->
          <div class="flex items-center space-x-3 mb-8">
            <div class="w-10 h-10 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-xl flex items-center justify-center animate-float">
              <span class="material-symbols-outlined text-white text-xl">quiz</span>
            </div>
            <h1 class="text-2xl font-bold gradient-text">QUIZIFY</h1>
          </div>

          <!-- Navigation -->
          <nav class="space-y-2">
            <a href="/admin-dashboard" 
               class="flex items-center space-x-3 px-4 py-3 bg-gradient-to-r from-primary-500 to-secondary-500 text-white rounded-xl font-medium transition-all duration-200">
              <span class="material-symbols-outlined">dashboard</span>
              <span>Dashboard</span>
            </a>
            <a href="/add" 
               class="flex items-center space-x-3 px-4 py-3 text-gray-600 dark:text-dark-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-dark-700 rounded-xl font-medium transition-all duration-200">
              <span class="material-symbols-outlined">add_box</span>
              <span>Add Quiz</span>
            </a>
            <a href="/manage" 
               class="flex items-center space-x-3 px-4 py-3 text-gray-600 dark:text-dark-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-dark-700 rounded-xl font-medium transition-all duration-200">
              <span class="material-symbols-outlined">add_circle</span>
              <span>Add Questions</span>
            </a>
            <a href="/manageview" 
               class="flex items-center space-x-3 px-4 py-3 text-gray-600 dark:text-dark-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-dark-700 rounded-xl font-medium transition-all duration-200">
              <span class="material-symbols-outlined">visibility</span>
              <span>View Questions</span>
            </a>
            <a href="/analytics" 
               class="flex items-center space-x-3 px-4 py-3 text-gray-600 dark:text-dark-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-dark-700 rounded-xl font-medium transition-all duration-200">
              <span class="material-symbols-outlined">analytics</span>
              <span>Analytics</span>
            </a>
          </nav>

          <!-- Logout Button -->
          <div class="absolute bottom-6 left-6 right-6">
            <form action="/logout" method="post">
              <button type="submit" 
                      class="w-full flex items-center space-x-3 px-4 py-3 bg-red-600 hover:bg-red-700 text-white rounded-xl font-medium transition-colors duration-200">
                <span class="material-symbols-outlined">logout</span>
                <span>Logout</span>
              </button>
            </form>
          </div>
        </div>
      </aside>

      <!-- Main Content -->
      <main class="flex-1 ml-64">
        <!-- Header -->
        <header class="glass-effect bg-white/50 dark:bg-dark-800/50 border-b border-gray-200 dark:border-dark-700 px-8 py-6">
          <div class="flex justify-between items-center">
            <div>
              <h2 class="text-3xl font-bold text-gray-900 dark:text-white">Admin Dashboard</h2>
              <p class="text-gray-600 dark:text-dark-300 mt-1">Manage your quizzes and monitor performance</p>
            </div>
            
            <div class="flex items-center space-x-4">
              <!-- Search Bar -->
              <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <span class="material-symbols-outlined text-gray-500 dark:text-dark-400">search</span>
                </div>
                <input type="text" 
                       placeholder="Search quizzes..." 
                       class="pl-10 pr-4 py-2 bg-white dark:bg-dark-700 border border-gray-300 dark:border-dark-600 rounded-lg text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-dark-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200 w-64">
              </div>
              
              <!-- Theme Toggle -->
              <button onclick="toggleTheme()" 
                      class="p-2 rounded-lg bg-gray-100 dark:bg-dark-700 hover:bg-gray-200 dark:hover:bg-dark-600 transition-colors duration-200"
                      aria-label="Toggle theme">
                <span class="material-symbols-outlined dark:hidden text-gray-700">dark_mode</span>
                <span class="material-symbols-outlined hidden dark:block text-white">light_mode</span>
              </button>
            </div>
          </div>
        </header>

        <!-- Content -->
        <div class="p-8">
          <!-- Stats Grid - Simplified -->
          <div class="grid lg:grid-cols-2 gap-6 mb-8">
            <!-- Total Quizzes -->
            <div class="glass-effect bg-white/50 dark:bg-dark-800/50 border border-gray-200 dark:border-dark-700 rounded-2xl p-6 animate-fade-in">
              <div class="flex items-center space-x-4">
                <div class="w-16 h-16 bg-gradient-to-r from-primary-500 to-primary-600 rounded-2xl flex items-center justify-center">
                  <span class="material-symbols-outlined text-white text-2xl">quiz</span>
                </div>
                <div>
                  <div class="text-3xl font-bold text-gray-900 dark:text-white"><%= totalQuizzes %></div>
                  <div class="text-gray-600 dark:text-dark-300">Total Quizzes</div>
                </div>
              </div>
            </div>

            <!-- Completed Quizzes -->
            <div class="glass-effect bg-white/50 dark:bg-dark-800/50 border border-gray-200 dark:border-dark-700 rounded-2xl p-6 animate-fade-in" style="animation-delay: 0.1s;">
              <div class="flex items-center space-x-4">
                <div class="w-16 h-16 bg-gradient-to-r from-green-500 to-green-600 rounded-2xl flex items-center justify-center">
                  <span class="material-symbols-outlined text-white text-2xl">check_circle</span>
                </div>
                <div>
                  <div class="text-3xl font-bold text-gray-900 dark:text-white"><%= users.filter(q => q.isComplete).length %></div>
                  <div class="text-gray-600 dark:text-dark-300">Completed Quizzes</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Quiz Grid -->
          <section class="mb-8">
            <div class="flex items-center justify-between mb-6">
              <h3 class="text-2xl font-bold text-gray-900 dark:text-white">Quiz Management</h3>
              <a href="/add" 
                 class="px-6 py-3 bg-gradient-to-r from-primary-500 to-secondary-500 hover:from-primary-600 hover:to-secondary-600 text-white rounded-xl font-medium transition-all duration-200 transform hover:scale-105">
                <span class="material-symbols-outlined mr-2">add</span>
                Create New Quiz
              </a>
            </div>
            
            <div class="grid lg:grid-cols-3 md:grid-cols-2 gap-6">
              <% users.forEach(function(quiz, index) { %>
              <div class="quiz-card glass-effect bg-white/50 dark:bg-dark-800/50 border border-gray-200 dark:border-dark-700 rounded-2xl p-6 hover:border-primary-500/50 transition-all duration-300 transform hover:-translate-y-2 animate-fade-in" 
                   style="animation-delay: <%= index * 0.1 %>s;">
                <!-- Quiz Status Badge -->
                <div class="flex justify-between items-start mb-4">
                  <div class="px-3 py-1 rounded-full text-xs font-medium <%= quiz.isComplete ? 'bg-green-500/20 text-green-600 dark:text-green-400 border border-green-500/30' : 'bg-red-500/20 text-red-600 dark:text-red-400 border border-red-500/30' %>">
                    <%= quiz.isComplete ? 'Complete' : 'Incomplete' %>
                  </div>
                  <button onclick="deleteQuiz('<%= quiz._id %>')" 
                          class="p-2 text-red-500 hover:text-red-400 hover:bg-red-500/10 rounded-lg transition-colors duration-200">
                    <span class="material-symbols-outlined">delete</span>
                  </button>
                </div>

                <!-- Quiz Info -->
                <div class="mb-4">
                  <h4 class="text-xl font-semibold text-gray-900 dark:text-white mb-2 truncate"><%= quiz.title %></h4>
                  <div class="flex items-center justify-between text-sm text-gray-600 dark:text-dark-300">
                    <span class="flex items-center">
                      <span class="material-symbols-outlined mr-1 text-xs">quiz</span>
                      <%= quiz.questions.length %>/<%= quiz.que %> questions
                    </span>
                    <span class="flex items-center">
                      <span class="material-symbols-outlined mr-1 text-xs">schedule</span>
                      <%= quiz.time %> minutes
                    </span>
                  </div>
                </div>

                <!-- Progress Bar -->
                <div class="mb-4">
                  <div class="flex justify-between text-xs text-gray-500 dark:text-dark-400 mb-1">
                    <span>Progress</span>
                    <span><%= Math.round((quiz.questions.length / quiz.que) * 100) %>%</span>
                  </div>
                  <div class="w-full bg-gray-200 dark:bg-dark-600 rounded-full h-2">
                    <div class="bg-gradient-to-r from-primary-500 to-secondary-500 h-2 rounded-full transition-all duration-300" 
                         style="width: <%= (quiz.questions.length / quiz.que) * 100 %>%"></div>
                  </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex space-x-2">
                  <a href="/manage?quiz_title=<%= encodeURIComponent(quiz.title) %>" 
                     class="flex-1 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg text-sm font-medium transition-colors duration-200 text-center">
                    Add Questions
                  </a>
                  <a href="/manageview" 
                     class="flex-1 px-4 py-2 bg-gray-100 dark:bg-dark-600 hover:bg-gray-200 dark:hover:bg-dark-500 text-gray-900 dark:text-white rounded-lg text-sm font-medium transition-colors duration-200 text-center">
                    View Questions
                  </a>
                </div>
              </div>
              <% }); %>
            </div>
          </section>

          <!-- Recent Results -->
          <section class="animate-fade-in" style="animation-delay: 0.5s;">
            <div class="flex items-center justify-between mb-6">
              <h3 class="text-2xl font-bold text-gray-900 dark:text-white">Recent Results</h3>
              <a href="/analytics" class="text-primary-400 hover:text-primary-300 text-sm font-medium transition-colors duration-200">
                View Analytics
              </a>
            </div>
            
            <div class="glass-effect bg-white/50 dark:bg-dark-800/50 border border-gray-200 dark:border-dark-700 rounded-2xl p-6">
              <% if (recentResults && recentResults.length > 0) { %>
                <div class="space-y-4">
                  <% recentResults.forEach(function(result, index) { %>
                  <div class="flex items-center justify-between p-4 bg-gray-50/50 dark:bg-dark-700/50 rounded-xl hover:bg-gray-100/50 dark:hover:bg-dark-600/50 transition-colors duration-200">
                    <div class="flex items-center space-x-4">
                      <div class="w-10 h-10 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
                        <span class="material-symbols-outlined text-white text-sm">person</span>
                      </div>
                      <div>
                        <h4 class="font-medium text-gray-900 dark:text-white"><%= result.userName %></h4>
                        <p class="text-sm text-gray-600 dark:text-dark-300">
                          <%= result.quiz ? result.quiz.title : 'Quiz Deleted' %>
                        </p>
                      </div>
                    </div>
                    
                    <div class="flex items-center space-x-4">
                      <div class="text-right">
                        <div class="text-2xl font-bold gradient-text">
                          <%= result.percentage.toFixed(1) %>%
                        </div>
                        <div class="text-xs text-gray-500 dark:text-dark-400">Score</div>
                      </div>
                      <button onclick="showQuizHistory('<%= result._id %>')" 
                              class="px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg text-sm font-medium transition-colors duration-200">
                        View Details
                      </button>
                    </div>
                  </div>
                  <% }); %>
                </div>
              <% } else { %>
                <div class="text-center py-12">
                  <div class="w-16 h-16 bg-gray-100 dark:bg-dark-700 rounded-full flex items-center justify-center mx-auto mb-4">
                    <span class="material-symbols-outlined text-gray-500 dark:text-dark-400 text-2xl">analytics</span>
                  </div>
                  <h4 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No results yet</h4>
                  <p class="text-gray-600 dark:text-dark-300">Quiz results will appear here once students start taking quizzes</p>
                </div>
              <% } %>
            </div>
          </section>
        </div>
      </main>
    </div>

    <!-- Quiz History Modal -->
    <div id="quizHistoryModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="glass-effect bg-white/90 dark:bg-dark-800/90 rounded-2xl p-8 w-full max-w-4xl border border-gray-200 dark:border-dark-700 max-h-[90vh] overflow-y-auto">
          <div class="flex justify-between items-center mb-6">
            <h2 id="modalQuizTitle" class="text-2xl font-bold text-gray-900 dark:text-white"></h2>
            <button onclick="closeModal()" 
                    class="p-2 hover:bg-gray-100 dark:hover:bg-dark-700 rounded-lg transition-colors duration-200">
              <span class="material-symbols-outlined text-gray-500 dark:text-dark-400">close</span>
            </button>
          </div>
          <div id="quizHistoryContent" class="space-y-4"></div>
        </div>
      </div>
    </div>

    <script>
      // Search functionality
      document.querySelector('input[placeholder="Search quizzes..."]').addEventListener("input", function (e) {
        const searchTerm = e.target.value.toLowerCase();
        const quizCards = document.querySelectorAll(".quiz-card");

        quizCards.forEach((card) => {
          const title = card.querySelector("h4").textContent.toLowerCase();
          if (title.includes(searchTerm)) {
            card.style.display = "block";
          } else {
            card.style.display = "none";
          }
        });
      });

      // Delete quiz functionality
      async function deleteQuiz(quizId) {
        if (confirm("Are you sure you want to delete this quiz? This action cannot be undone.")) {
          try {
            const response = await fetch(`/api/quiz/${quizId}`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
            });

            if (response.ok) {
              // Remove the quiz card from the UI
              const quizCard = document.querySelector(`[onclick="deleteQuiz('${quizId}')"]`).closest(".quiz-card");
              quizCard.remove();
              alert("Quiz deleted successfully!");
            } else {
              throw new Error("Failed to delete quiz");
            }
          } catch (error) {
            console.error("Error deleting quiz:", error);
            alert("Failed to delete quiz. Please try again.");
          }
        }
      }

      // Quiz history functionality
      async function showQuizHistory(resultId) {
        try {
          const response = await fetch(`/api/quiz-history/${resultId}`);
          const data = await response.json();

          const modal = document.getElementById("quizHistoryModal");
          const modalTitle = document.getElementById("modalQuizTitle");
          const modalContent = document.getElementById("quizHistoryContent");

          modalTitle.textContent = data.quizTitle;
          modalContent.innerHTML = "";

          data.questions.forEach((question, index) => {
            const questionDiv = document.createElement("div");
            questionDiv.className = `p-6 bg-gray-50/50 dark:bg-dark-700/50 rounded-xl border-l-4 ${question.isCorrect ? 'border-green-500' : 'border-red-500'}`;
            questionDiv.innerHTML = `
              <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Question ${index + 1}: ${question.question}</h4>
              <div class="space-y-2">
                <p class="text-sm">
                  <span class="text-gray-600 dark:text-dark-300">Student's Answer:</span> 
                  <span class="${question.isCorrect ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'} font-medium">${question.userAnswer}</span>
                </p>
                <p class="text-sm">
                  <span class="text-gray-600 dark:text-dark-300">Correct Answer:</span> 
                  <span class="text-green-600 dark:text-green-400 font-medium">${question.correctAnswer}</span>
                </p>
                <p class="text-sm">
                  <span class="text-gray-600 dark:text-dark-300">Points:</span> 
                  <span class="text-gray-900 dark:text-white font-medium">${question.points}</span>
                </p>
              </div>
            `;
            modalContent.appendChild(questionDiv);
          });

          modal.classList.remove("hidden");
        } catch (error) {
          console.error("Error fetching quiz history:", error);
          alert("Error loading quiz history. Please try again.");
        }
      }

      function closeModal() {
        document.getElementById("quizHistoryModal").classList.add("hidden");
      }

      // Close modal when clicking outside
      window.onclick = function (event) {
        const modal = document.getElementById("quizHistoryModal");
        if (event.target == modal) {
          modal.classList.add("hidden");
        }
      };
    </script>
  </body>
</html>