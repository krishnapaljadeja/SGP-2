<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QuiziFY - User Dashboard</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary-gradient: linear-gradient(135deg, #6366f1, #8b5cf6);
        --secondary-gradient: linear-gradient(135deg, #3b82f6, #2dd4bf);
        --background-gradient: linear-gradient(135deg, #f8fafc, #e2e8f0);
        --card-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        --hover-transform: translateY(-5px);
        --sidebar-width: 280px;
        --header-height: 80px;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
      }

      body {
        background: var(--background-gradient);
        min-height: 100vh;
        color: #1e293b;
        display: flex;
      }

      /* Sidebar Styles */
      .sidebar {
        width: var(--sidebar-width);
        background: white;
        height: 100vh;
        position: fixed;
        left: 0;
        top: 0;
        padding: 2rem;
        box-shadow: var(--card-shadow);
        display: flex;
        flex-direction: column;
        z-index: 1000;
      }

      .logo {
        font-size: 2rem;
        font-weight: 700;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        letter-spacing: -1px;
        margin-bottom: 2rem;
      }

      .nav-menu {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-top: 2rem;
      }

      .nav-item:where(a, button) {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        border-radius: 12px;
        color: #64748b;
        text-decoration: none;
        background: none;
        border: none;
        width: 100%;
        text-align: left;
        transition: all 0.3s ease;
        font: inherit;
        cursor: pointer;
      }

      .nav-item:where(a, button):hover,
      .nav-item:where(a, button).active {
        background: var(--primary-gradient);
        color: white;
      }

      .nav-item span {
        font-size: 1.5rem;
      }

      /* Main Content Styles */
      .main-content {
        margin-left: var(--sidebar-width);
        padding: 2rem;
        width: calc(100% - var(--sidebar-width));
      }

      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
      }

      /* Quiz Cards */
      .quiz-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
      }

      .quiz-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: var(--card-shadow);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }

      .quiz-card:hover {
        transform: var(--hover-transform);
      }

      .quiz-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 1rem;
      }

      .quiz-meta {
        display: flex;
        justify-content: space-between;
        color: #64748b;
        font-size: 0.9rem;
        margin-bottom: 1.5rem;
      }

      .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        border: none;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        width: 100%;
      }

      .btn-primary {
        background: var(--primary-gradient);
        color: white;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      }

      /* Results Section */
      .results-section {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: var(--card-shadow);
      }

      .results-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
      }

      .results-list {
        max-height: 400px;
        overflow-y: auto;
        padding-right: 1rem;
      }

      .result-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid #e2e8f0;
      }

      .result-item:last-child {
        border-bottom: none;
      }

      .result-info {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .result-score {
        font-size: 1.5rem;
        font-weight: 700;
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
      }

      /* Animations */
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .fade-in {
        animation: fadeIn 0.5s ease-out;
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        .sidebar {
          width: 100%;
          height: auto;
          position: relative;
          margin-bottom: 2rem;
        }

        .main-content {
          margin-left: 0;
          width: 100%;
        }

        .quiz-grid {
          grid-template-columns: 1fr;
        }
      }

      /* Search Bar Styles */
      .search-bar {
        display: flex;
        align-items: center;
        background: white;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        width: 300px;
      }

      .search-bar input {
        border: none;
        outline: none;
        width: 100%;
        font-size: 1rem;
        margin-left: 1rem;
      }

      /* Quiz Modal Styles */
      .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 2000;
        overflow-y: auto;
      }

      .modal-content {
        background: white;
        margin: 2rem auto;
        padding: 2rem;
        border-radius: 15px;
        width: 90%;
        max-width: 800px;
        position: relative;
        max-height: 90vh;
        overflow-y: auto;
      }

      .close-modal {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #64748b;
      }

      #aiQuizForm {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        max-width: 500px;
        margin: 0 auto;
      }

      #aiQuizQuestions {
        max-height: 70vh;
        overflow-y: auto;
        padding-right: 1rem;
      }

      #aiQuizResults {
        padding: 2rem;
        background: #f8fafc;
        border-radius: 15px;
        margin-top: 2rem;
      }

      .results-summary {
        text-align: center;
        margin-bottom: 2rem;
      }

      .score-display {
        display: inline-block;
        padding: 1rem 2rem;
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .score-label {
        font-size: 1.2rem;
        color: #64748b;
        margin-right: 0.5rem;
      }

      .score-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1e293b;
      }

      .detailed-results {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
      }

      .question-result {
        background: white;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
      }

      .question-result h4 {
        margin-bottom: 1rem;
        color: #1e293b;
      }

      .answer-details {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .answer-details p {
        margin: 0;
        font-size: 1rem;
      }

      .correct-answer {
        color: #10b981;
        font-weight: 500;
      }

      .wrong-answer {
        color: #ef4444;
        font-weight: 500;
      }

      .correct {
        border-left: 4px solid #10b981;
      }

      .incorrect {
        border-left: 4px solid #ef4444;
      }

      .quiz-history-item {
        background: #f8fafc;
        border-radius: 10px;
        padding: 1rem;
        margin-bottom: 1rem;
      }

      .view-history-btn {
        background: var(--secondary-gradient);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        border: none;
        cursor: pointer;
        font-size: 0.9rem;
        margin-top: 0.5rem;
      }

      .view-history-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      }

      /* AI Quiz Form Styles */
      .form-group {
        margin-bottom: 1.5rem;
      }

      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: #1e293b;
        font-weight: 500;
      }

      .form-group input {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      .form-group input:focus {
        outline: none;
        border-color: #6366f1;
        box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
      }

      .form-row {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
      }

      .form-row .form-group {
        flex: 1;
        margin-bottom: 0;
      }

      /* Loading Animation */
      .loading-container {
        display: none;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        text-align: center;
      }

      .loading-spinner {
        width: 50px;
        height: 50px;
        border: 5px solid #f3f3f3;
        border-top: 5px solid #6366f1;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 1rem;
      }

      .loading-text {
        color: #64748b;
        font-size: 1.1rem;
        margin-top: 1rem;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <!-- Sidebar -->
    <aside class="sidebar">
      <h1 class="logo">QUIZIFY</h1>
      <nav class="nav-menu">
        <a href="/student-dashboard" class="nav-item active">
          <span class="material-symbols-outlined">dashboard</span>
          Dashboard
        </a>
        <a href="/profile" class="nav-item">
          <span class="material-symbols-outlined">person</span>
          Profile
        </a>
        <form
          action="/logout"
          method="post"
          style="margin-top: auto"
          onsubmit="handleLogout(event)"
        >
          <button
            type="submit"
            class="nav-item"
            style="
              /* background: none; */
              border: none;
              width: 100%;
              text-align: left;
            "
          >
            <span class="material-symbols-outlined">logout</span>
            Logout
          </button>
        </form>
      </nav>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <div class="header">
        <h2>Student Dashboard</h2>
        <div class="search-bar">
          <span class="material-symbols-outlined">search</span>
          <input type="text" id="quizSearch" placeholder="Search quizzes..." />
        </div>
      </div>

      <!-- Available Quizzes Section -->
      <div class="quiz-grid" id="quizContainer">
        <!-- AI Quiz Card -->
        <div class="quiz-card fade-in" data-title="ai quiz">
          <h3 class="quiz-title">AI Generated Quiz</h3>
          <div class="quiz-meta">
            <span>10 Questions</span>
            <span>Custom Topic</span>
          </div>
          <button onclick="showAIQuizModal()" class="btn btn-primary">
            <span class="material-symbols-outlined">smart_toy</span>
            Start AI Quiz
          </button>
        </div>

        <% users.forEach(function(e) { %>
        <div
          class="quiz-card fade-in"
          data-title="<%= e.title.toLowerCase() %>"
        >
          <h3 class="quiz-title"><%= e.title %></h3>
          <div class="quiz-meta">
            <span><%= e.que %> Questions</span>
            <span><%= e.time %> Minutes</span>
          </div>
          <form action="/quiz/<%= e._id %>" method="get">
            <button type="submit" class="btn btn-primary">
              <span class="material-symbols-outlined">play_arrow</span>
              Start Quiz
            </button>
          </form>
        </div>
        <% }); %>
      </div>

      <!-- AI Quiz Modal -->
      <div id="aiQuizModal" class="modal">
        <div class="modal-content">
          <button class="close-modal" onclick="closeAIQuizModal()">
            &times;
          </button>
          <h2>AI Generated Quiz</h2>
          <div id="aiQuizContent">
            <div id="aiQuizForm">
              <div class="form-row">
                <div class="form-group">
                  <label for="quizTitle">Enter Quiz Topic:</label>
                  <input
                    type="text"
                    id="quizTitle"
                    placeholder="e.g., JavaScript, History, Science..."
                    required
                  />
                </div>
                <div class="form-group">
                  <label for="questionCount">Number of Questions:</label>
                  <input
                    type="number"
                    id="questionCount"
                    min="1"
                    max="20"
                    value="10"
                    required
                  />
                </div>
              </div>
              <button
                onclick="startAIQuiz()"
                class="btn btn-primary"
                id="generateBtn"
              >
                Generate Quiz
              </button>
            </div>
            <div id="loadingContainer" class="loading-container">
              <div class="loading-spinner"></div>
              <div class="loading-text">Generating your quiz...</div>
            </div>
            <div id="aiQuizQuestions" style="display: none"></div>
            <div id="aiQuizResults" style="display: none">
              <h3>Your Score: <span id="aiQuizScore"></span></h3>
              <button onclick="submitAIQuizScore()" class="btn btn-primary">
                Submit Score
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Recent Results Section -->
      <div class="results-section fade-in">
        <div class="results-header">
          <h3>Your Recent Results</h3>
        </div>
        <div class="results-list">
          <% if (typeof recentResults !== 'undefined' && recentResults.length >
          0) { %> <% recentResults.forEach(function(result) { %>
          <div class="result-item">
            <div class="result-info">
              <% if (result.quiz) { %>
              <h4><%= result.quiz.title %></h4>
              <p style="color: #64748b">
                Completed on <%= new
                Date(result.completedAt).toLocaleDateString() %>
              </p>
              <% } else { %>
              <h4>Quiz title not available</h4>
              <% } %>
            </div>
            <div
              style="
                display: flex;
                flex-direction: column;
                align-items: flex-end;
              "
            >
              <div class="result-score">
                <%= result.percentage.toFixed(1) %>%
              </div>
              <button
                class="view-history-btn"
                onclick="showQuizHistory('<%= result._id %>')"
              >
                View History
              </button>
            </div>
          </div>
          <% }); %> <% } else { %>
          <div class="result-item">
            <p style="text-align: center; color: #64748b">
              No quiz results yet. Start taking quizzes to see your results
              here!
            </p>
          </div>
          <% } %>
        </div>
      </div>
    </main>

    <!-- Quiz History Modal -->
    <div id="quizHistoryModal" class="modal">
      <div class="modal-content">
        <button class="close-modal" onclick="closeModal()">&times;</button>
        <h2 id="modalQuizTitle"></h2>
        <div id="quizHistoryContent"></div>
      </div>
    </div>

    <script>
      // Search functionality
      document
        .getElementById("quizSearch")
        .addEventListener("input", function (e) {
          const searchTerm = e.target.value.toLowerCase();
          const quizCards = document.querySelectorAll(".quiz-card");

          quizCards.forEach((card) => {
            const title = card.getAttribute("data-title");
            if (title.includes(searchTerm)) {
              card.style.display = "block";
            } else {
              card.style.display = "none";
            }
          });
        });

      // Quiz history functionality
      async function showQuizHistory(resultId) {
        try {
          const response = await fetch(`/api/quiz-history/${resultId}`);
          const data = await response.json();

          const modal = document.getElementById("quizHistoryModal");
          const modalTitle = document.getElementById("modalQuizTitle");
          const modalContent = document.getElementById("quizHistoryContent");

          modalTitle.textContent = data.quizTitle;
          modalContent.innerHTML = "";

          data.questions.forEach((question, index) => {
            const questionDiv = document.createElement("div");
            questionDiv.className = "quiz-history-item";
            questionDiv.innerHTML = `
              <h4>Question ${index + 1}: ${question.question}</h4>
              <p>Your Answer: <span class="${
                question.isCorrect ? "correct-answer" : "wrong-answer"
              }">${question.userAnswer}</span></p>
              <p>Correct Answer: ${question.correctAnswer}</p>
              <p>Points: ${question.points}</p>
            `;
            modalContent.appendChild(questionDiv);
          });

          modal.style.display = "block";
        } catch (error) {
          console.error("Error fetching quiz history:", error);
          alert("Error loading quiz history. Please try again.");
        }
      }

      function closeModal() {
        document.getElementById("quizHistoryModal").style.display = "none";
      }

      // Close modal when clicking outside
      window.onclick = function (event) {
        const modal = document.getElementById("quizHistoryModal");
        const aiModal = document.getElementById("aiQuizModal");
        if (event.target == modal) {
          modal.style.display = "none";
        }
        if (event.target == aiModal) {
          aiModal.style.display = "none";
        }
      };

      // AI Quiz functionality
      let currentAIQuiz = null;
      let userAnswers = {};

      function showAIQuizModal() {
        document.getElementById("aiQuizModal").style.display = "block";
        document.getElementById("aiQuizForm").style.display = "block";
        document.getElementById("aiQuizQuestions").style.display = "none";
        document.getElementById("aiQuizResults").style.display = "none";
      }

      async function startAIQuiz() {
        const title = document.getElementById("quizTitle").value.trim();
        const questionCount = document.getElementById("questionCount").value;
        const generateBtn = document.getElementById("generateBtn");
        const loadingContainer = document.getElementById("loadingContainer");

        if (!title) {
          alert("Please enter a quiz topic");
          return;
        }

        if (questionCount < 1 || questionCount > 20) {
          alert("Please enter a number of questions between 1 and 20");
          return;
        }

        // Show loading state
        document.getElementById("aiQuizForm").style.display = "none";
        loadingContainer.style.display = "flex";
        generateBtn.disabled = true;

        try {
          // Get token from localStorage
          const token = localStorage.getItem("token");
          console.log(
            "Token from localStorage:",
            token ? "Present" : "Missing"
          );

          if (!token) {
            alert("Please log in again");
            window.location.href = "/login";
            return;
          }

          const response = await fetch(
            `/ai-quiz?title=${encodeURIComponent(
              title
            )}&count=${questionCount}`,
            {
              method: "GET",
              headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
              },
            }
          );

          console.log("Response status:", response.status);

          if (response.status === 401) {
            // Clear token and redirect to login
            localStorage.removeItem("token");
            alert("Session expired. Please log in again.");
            window.location.href = "/login";
            return;
          }

          const data = await response.json();
          console.log("Response data:", data);

          if (data.success) {
            currentAIQuiz = data.quiz;
            userAnswers = {};
            loadingContainer.style.display = "none";
            displayAIQuiz();
          } else {
            const errorMessage =
              data.error ||
              data.message ||
              "Failed to generate quiz. Please try again.";
            alert(
              `Error: ${errorMessage}\n\nIf this persists, please try a different topic or try again later.`
            );
            console.error("Quiz generation error:", data);
            // Reset form state
            document.getElementById("aiQuizForm").style.display = "block";
            loadingContainer.style.display = "none";
            generateBtn.disabled = false;
          }
        } catch (error) {
          console.error("Error starting AI quiz:", error);
          alert(
            "Error connecting to the server. Please check your internet connection and try again."
          );
          // Reset form state
          document.getElementById("aiQuizForm").style.display = "block";
          loadingContainer.style.display = "none";
          generateBtn.disabled = false;
        }
      }

      function displayAIQuiz() {
        const container = document.getElementById("aiQuizQuestions");
        container.style.display = "block";
        container.innerHTML = "";

        currentAIQuiz.forEach((question, index) => {
          const questionDiv = document.createElement("div");
          questionDiv.className = "quiz-history-item";
          questionDiv.style.marginBottom = "2rem";
          questionDiv.style.padding = "1.5rem";
          questionDiv.style.backgroundColor = "#f8fafc";
          questionDiv.style.borderRadius = "10px";

          questionDiv.innerHTML = `
            <h4 style="margin-bottom: 1rem; color: #1e293b;">Question ${
              index + 1
            }: ${question.question}</h4>
            <div class="options" style="display: flex; flex-direction: column; gap: 0.5rem;">
              ${question.options
                .map(
                  (option, i) => `
                <label style="display: flex; align-items: center; gap: 0.5rem; padding: 0.75rem; 
                           background: white; border-radius: 8px; cursor: pointer;
                           transition: background-color 0.3s ease;">
                  <input type="radio" name="q${index}" value="${option}" 
                         onchange="updateAnswer(${index}, '${option}')"
                         style="margin: 0;">
                  ${option}
                </label>
              `
                )
                .join("")}
            </div>
          `;
          container.appendChild(questionDiv);
        });

        // Add submit button
        const submitButton = document.createElement("button");
        submitButton.className = "btn btn-primary";
        submitButton.style.marginTop = "2rem";
        submitButton.textContent = "Submit Quiz";
        submitButton.onclick = calculateAIQuizScore;
        container.appendChild(submitButton);
      }

      function updateAnswer(questionIndex, answer) {
        userAnswers[questionIndex] = answer;
      }

      function calculateAIQuizScore() {
        let correctAnswers = 0;
        const totalQuestions = currentAIQuiz.length;
        const resultsContainer = document.getElementById("aiQuizResults");
        resultsContainer.style.display = "block";
        resultsContainer.innerHTML = `
          <h3>Quiz Results</h3>
          <div class="results-summary">
            <div class="score-display">
              <span class="score-label">Your Score:</span>
              <span id="aiQuizScore" class="score-value">0/${totalQuestions}</span>
            </div>
          </div>
          <div class="detailed-results">
            ${currentAIQuiz
              .map((question, index) => {
                const userAnswer = userAnswers[index] || "Not answered";
                const isCorrect = userAnswer === question.correctAnswer;
                if (isCorrect) correctAnswers++;
                return `
                <div class="question-result ${
                  isCorrect ? "correct" : "incorrect"
                }">
                  <h4>Question ${index + 1}: ${question.question}</h4>
                  <div class="answer-details">
                    <p><strong>Your Answer:</strong> <span class="${
                      isCorrect ? "correct-answer" : "wrong-answer"
                    }">${userAnswer}</span></p>
                    <p><strong>Correct Answer:</strong> <span class="correct-answer">${
                      question.correctAnswer
                    }</span></p>
                  </div>
                </div>
              `;
              })
              .join("")}
          </div>
          <button onclick="submitAIQuizScore()" class="btn btn-primary">
            Submit Score
          </button>
        `;
        document.getElementById(
          "aiQuizScore"
        ).textContent = `${correctAnswers}/${totalQuestions}`;
        document.getElementById("aiQuizQuestions").style.display = "none";
      }

      async function submitAIQuizScore() {
        try {
          const scoreText = document.getElementById("aiQuizScore").textContent;
          const [correctAnswers, totalQuestions] = scoreText
            .split("/")
            .map((num) => parseInt(num));
          const percentage = Math.round(
            (correctAnswers / totalQuestions) * 100
          );

          const response = await fetch("/ai-quiz/marks", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ score: percentage }),
          });

          const data = await response.json();
          if (data.success) {
            alert(data.message);
            closeAIQuizModal();
            // Refresh the page to show updated results
            window.location.reload();
          } else {
            alert("Failed to submit score. Please try again.");
          }
        } catch (error) {
          console.error("Error submitting score:", error);
          alert("Error submitting score. Please try again.");
        }
      }

      function closeAIQuizModal() {
        document.getElementById("aiQuizModal").style.display = "none";
      }
    </script>
  </body>
</html>
